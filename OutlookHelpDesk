#If VBA7 Then
    Private Declare PtrSafe Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" _
        (ByVal hwnd As Long, ByVal IpOperation As String, ByVal IpFile As String, _
    ByVal IpParameters As String, ByVal IpDirectory As String, ByVal nShowCmd As Long) As Long
#Else
    Private Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" _
        (ByVal hwnd As Long, ByVal IpOperation As String, ByVal IpFile As String, _
    ByVal IpParameters As String, ByVal IpDirectory As String, ByVal nShowCmd As Long) As Long
#End If

Public Function ModDate()
ModDate = Format(FileDateTime(ThisWorkbook.FullName), "d/m/yy h:n ampm")
End Function

Sub UserName()
Sheets("Pricing CUB NSW LOG").Range("A12").Value = Environ("username")
End Sub

Sub Extract()
Dim mFile As Workbook
Dim myOlapp As Outlook.Application
Dim mynamespace As Outlook.Namespace
Dim objAttachments As Outlook.Attachments
Dim objSelection As Outlook.Selection
Dim myfolder As Outlook.MAPIFolder
Dim i As Integer
Dim lngCount As Long
Dim myitem As Outlook.MailItem
Dim msgtext As String
Dim wb As Workbook
Dim sh As Worksheet
Set mFile = ThisWorkbook
Application.ScreenUpdating = False
Application.DisplayAlerts = False
On Error Resume Next
    Set wb = Workbooks.Add
        wb.Worksheets(1).Name = "Refresh Inbox"
    Set sh = wb.Worksheets("Refresh Inbox")
    mFile.Activate
    mFile.Worksheets("Refresh Inbox").Select
    Cells.Clear
    wb.Activate
    sh.Cells(1, 1) = "Sender"
    sh.Cells(1, 2) = "Subject"
    sh.Cells(1, 3) = "Date"
    sh.Cells(1, 4) = "Category"
    sh.Cells(1, 5) = "Flag"
    sh.Cells(1, 6) = "Flag Completed Date"
    sh.Cells(1, 7) = "Inbox Folder Name"

Line100:
    DoEvents
    Set myOlapp = GetObject(, "Outlook.Application")
    'Get the collection of selected objects.
    Set objSelection = myOlapp.ActiveExplorer.Selection
    Set mynamespace = myOlapp.GetNamespace("MAPI")
    Set myfolder = mynamespace.PickFolder
    If myfolder Is Nothing Then
        MsgBox "Task terminated as you did not selected any outlook folder", vbCritical
        Exit Sub
    End If
    eLR = Range("A" & Rows.Count).End(xlUp).Row
    For i = eLR + 1 To myfolder.Items.Count
        Set myitem = myfolder.Items(i)
        Set objAttachments = myitem.Attachments
        sh.Cells(i, 1) = myitem.SenderName
        sh.Cells(i, 2) = myitem.Subject
        sh.Cells(i, 3) = myitem.ReceivedTime
        sh.Cells(i, 4) = myitem.Categories
        sh.Cells(i, 5) = myitem.FlagStatus
        sh.Cells(i, 6) = myitem.LastModificationTime '.TaskCompletedtime
        sh.Cells(i, 7) = myfolder.Name
    Next
    Set objSelection = Nothing
    Set mynamespace = Nothing
    Set myfolder = Nothing
    Set objSelection = Nothing

cYesNo = MsgBox("Select ""YES"" for another outlook folder data else ""NO"" for exit", vbYesNo)
If cYesNo = vbYes Then
GoTo Line100
Else
    wb.Activate
    wb.Worksheets(1).Range("A1:H" & Range("A" & Rows.Count).End(xlUp).Row).Copy
    mFile.Activate
    mFile.Worksheets("Refresh Inbox").Range("A1").PasteSpecial xlPasteValues
    Range("C2:C" & Range("A" & Rows.Count).End(xlUp).Row).NumberFormat = "mm/dd/yyyy hh:mm:ss AM/PM"
    Range("F2:F" & Range("A" & Rows.Count).End(xlUp).Row).NumberFormat = "mm/dd/yyyy hh:mm:ss AM/PM"
    Cells.WrapText = False
    Range("A1:G" & Range("A" & Rows.Count).End(xlUp).Row).Sort key1:=Range("C1"), order1:=xlDescending, Header:=xlYes
    eLR = Range("A" & Rows.Count).End(xlUp).Row
    Range("H1").Value = "TAT in Days"
    Range("I1").Value = "TAT in hh:mm:ss"
    Range("J1").Value = "Consolidated TAT( days; hh:mm:ss)"
    
    Range("H2:H" & eLR).Value = "=ABS(NETWORKDAYS(C2,F2)-1)"
    Range("I2:I" & eLR).Value = "=TEXT((F2-C2),""hh:mm:ss"")"
    Range("J2:J" & eLR).Value = "=IF(H2<=1,(H2&"" day; ""&"" ""&I2), (H2&"" days; ""&"" ""&I2))"
    
    Range("H2:J" & eLR).Copy
    Range("H2").PasteSpecial (xlPasteValues)
    Range("A1:J1").Font.Bold = True
    Range("A1:G1").Interior.ColorIndex = 20
    Range("H1:J1").Interior.ColorIndex = 6
    Range("A1:J" & eLR).Borders.LineStyle = xlContinuous
    Range("C1:J" & eLR).HorizontalAlignment = xlCenter
    Columns("A:B").ColumnWidth = 31
    Columns("C:Z").AutoFit
    
    wb.Close
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Exit Sub

End If

End Sub


